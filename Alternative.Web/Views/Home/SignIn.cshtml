@using Alternative.Model.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Sign In";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>SignUp</title>
    <link rel="stylesheet" href="~/css/signin.css">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900&display=swap" rel="stylesheet">
    <meta name="google-signin-client_id" content="819887038148-20de6bkfkr78vk8fnqsne8b3s27ppmk8.apps.googleusercontent.com">
</head>
<body>
    <div class="signForm">
        <p class="formName">ACCOUNT LOGIN</p>
        <p class="signUpText">Sign in with Google</p>
        <form asp-action="ExternalLogin" asp-controller="Account" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
            <div>
                
            </div>
        </form>


    </div>


    <script src="https://apis.google.com/js/platform.js" async defer></script>

    <script>
        function onSignIn(googleUser) {
            var profile = googleUser.getBasicProfile();
            console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
            console.log('Name: ' + profile.getName());
            console.log('Image URL: ' + profile.getImageUrl());
            console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
        }
    </script>
</body>
</html>